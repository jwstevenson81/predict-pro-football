//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ppfModel", "FK_Game_Season", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PPF.Models.Season), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PPF.Models.Game), true)]
[assembly: EdmRelationshipAttribute("ppfModel", "FK_Pick_Game", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PPF.Models.Game), "Pick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PPF.Models.Pick), true)]
[assembly: EdmRelationshipAttribute("ppfModel", "FK_StandardPick_Game", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PPF.Models.Game), "StandardPick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PPF.Models.StandardPick), true)]
[assembly: EdmRelationshipAttribute("ppfModel", "FK_PlayoffSuperbowlPick_Season", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PPF.Models.Season), "PlayoffSuperbowlPick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PPF.Models.PlayoffSuperbowlPick), true)]
[assembly: EdmRelationshipAttribute("ppfModel", "FK_PlayoffSuperbowlPick_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PPF.Models.Team), "PlayoffSuperbowlPick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PPF.Models.PlayoffSuperbowlPick), true)]
[assembly: EdmRelationshipAttribute("ppfModel", "FK_StandardPlayoffSuperbowlPick_Season", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PPF.Models.Season), "StandardPlayoffSuperbowlPick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PPF.Models.StandardPlayoffSuperbowlPick), true)]

#endregion

namespace PPF.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ppfEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ppfEntities object using the connection string found in the 'ppfEntities' section of the application configuration file.
        /// </summary>
        public ppfEntities() : base("name=ppfEntities", "ppfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ppfEntities object.
        /// </summary>
        public ppfEntities(string connectionString) : base(connectionString, "ppfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ppfEntities object.
        /// </summary>
        public ppfEntities(EntityConnection connection) : base(connection, "ppfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pick> Picks
        {
            get
            {
                if ((_Picks == null))
                {
                    _Picks = base.CreateObjectSet<Pick>("Picks");
                }
                return _Picks;
            }
        }
        private ObjectSet<Pick> _Picks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayoffSuperbowlPick> PlayoffSuperbowlPicks
        {
            get
            {
                if ((_PlayoffSuperbowlPicks == null))
                {
                    _PlayoffSuperbowlPicks = base.CreateObjectSet<PlayoffSuperbowlPick>("PlayoffSuperbowlPicks");
                }
                return _PlayoffSuperbowlPicks;
            }
        }
        private ObjectSet<PlayoffSuperbowlPick> _PlayoffSuperbowlPicks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Season> Seasons
        {
            get
            {
                if ((_Seasons == null))
                {
                    _Seasons = base.CreateObjectSet<Season>("Seasons");
                }
                return _Seasons;
            }
        }
        private ObjectSet<Season> _Seasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StandardPick> StandardPicks
        {
            get
            {
                if ((_StandardPicks == null))
                {
                    _StandardPicks = base.CreateObjectSet<StandardPick>("StandardPicks");
                }
                return _StandardPicks;
            }
        }
        private ObjectSet<StandardPick> _StandardPicks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StandardPlayoffSuperbowlPick> StandardPlayoffSuperbowlPicks
        {
            get
            {
                if ((_StandardPlayoffSuperbowlPicks == null))
                {
                    _StandardPlayoffSuperbowlPicks = base.CreateObjectSet<StandardPlayoffSuperbowlPick>("StandardPlayoffSuperbowlPicks");
                }
                return _StandardPlayoffSuperbowlPicks;
            }
        }
        private ObjectSet<StandardPlayoffSuperbowlPick> _StandardPlayoffSuperbowlPicks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Picks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPicks(Pick pick)
        {
            base.AddObject("Picks", pick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayoffSuperbowlPicks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayoffSuperbowlPicks(PlayoffSuperbowlPick playoffSuperbowlPick)
        {
            base.AddObject("PlayoffSuperbowlPicks", playoffSuperbowlPick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Seasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeasons(Season season)
        {
            base.AddObject("Seasons", season);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StandardPicks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStandardPicks(StandardPick standardPick)
        {
            base.AddObject("StandardPicks", standardPick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StandardPlayoffSuperbowlPicks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStandardPlayoffSuperbowlPicks(StandardPlayoffSuperbowlPick standardPlayoffSuperbowlPick)
        {
            base.AddObject("StandardPlayoffSuperbowlPicks", standardPlayoffSuperbowlPick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ppfModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="season_Id">Initial value of the Season_Id property.</param>
        /// <param name="gameDateTime">Initial value of the GameDateTime property.</param>
        /// <param name="isPlayoff">Initial value of the IsPlayoff property.</param>
        /// <param name="isSuperbowl">Initial value of the IsSuperbowl property.</param>
        /// <param name="week">Initial value of the Week property.</param>
        /// <param name="homeTeam_Id">Initial value of the HomeTeam_Id property.</param>
        /// <param name="awayTeam_Id">Initial value of the AwayTeam_Id property.</param>
        public static Game CreateGame(global::System.Int32 id, global::System.Int32 season_Id, global::System.DateTime gameDateTime, global::System.Boolean isPlayoff, global::System.Boolean isSuperbowl, global::System.Int32 week, global::System.Int32 homeTeam_Id, global::System.Int32 awayTeam_Id)
        {
            Game game = new Game();
            game.Id = id;
            game.Season_Id = season_Id;
            game.GameDateTime = gameDateTime;
            game.IsPlayoff = isPlayoff;
            game.IsSuperbowl = isSuperbowl;
            game.Week = week;
            game.HomeTeam_Id = homeTeam_Id;
            game.AwayTeam_Id = awayTeam_Id;
            return game;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Season_Id
        {
            get
            {
                return _Season_Id;
            }
            set
            {
                OnSeason_IdChanging(value);
                ReportPropertyChanging("Season_Id");
                _Season_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Season_Id");
                OnSeason_IdChanged();
            }
        }
        private global::System.Int32 _Season_Id;
        partial void OnSeason_IdChanging(global::System.Int32 value);
        partial void OnSeason_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime GameDateTime
        {
            get
            {
                return _GameDateTime;
            }
            set
            {
                OnGameDateTimeChanging(value);
                ReportPropertyChanging("GameDateTime");
                _GameDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameDateTime");
                OnGameDateTimeChanged();
            }
        }
        private global::System.DateTime _GameDateTime;
        partial void OnGameDateTimeChanging(global::System.DateTime value);
        partial void OnGameDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPlayoff
        {
            get
            {
                return _IsPlayoff;
            }
            set
            {
                OnIsPlayoffChanging(value);
                ReportPropertyChanging("IsPlayoff");
                _IsPlayoff = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPlayoff");
                OnIsPlayoffChanged();
            }
        }
        private global::System.Boolean _IsPlayoff;
        partial void OnIsPlayoffChanging(global::System.Boolean value);
        partial void OnIsPlayoffChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSuperbowl
        {
            get
            {
                return _IsSuperbowl;
            }
            set
            {
                OnIsSuperbowlChanging(value);
                ReportPropertyChanging("IsSuperbowl");
                _IsSuperbowl = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSuperbowl");
                OnIsSuperbowlChanged();
            }
        }
        private global::System.Boolean _IsSuperbowl;
        partial void OnIsSuperbowlChanging(global::System.Boolean value);
        partial void OnIsSuperbowlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Week
        {
            get
            {
                return _Week;
            }
            set
            {
                OnWeekChanging(value);
                ReportPropertyChanging("Week");
                _Week = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Week");
                OnWeekChanged();
            }
        }
        private global::System.Int32 _Week;
        partial void OnWeekChanging(global::System.Int32 value);
        partial void OnWeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HomeTeam_Id
        {
            get
            {
                return _HomeTeam_Id;
            }
            set
            {
                OnHomeTeam_IdChanging(value);
                ReportPropertyChanging("HomeTeam_Id");
                _HomeTeam_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeam_Id");
                OnHomeTeam_IdChanged();
            }
        }
        private global::System.Int32 _HomeTeam_Id;
        partial void OnHomeTeam_IdChanging(global::System.Int32 value);
        partial void OnHomeTeam_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AwayTeam_Id
        {
            get
            {
                return _AwayTeam_Id;
            }
            set
            {
                OnAwayTeam_IdChanging(value);
                ReportPropertyChanging("AwayTeam_Id");
                _AwayTeam_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeam_Id");
                OnAwayTeam_IdChanged();
            }
        }
        private global::System.Int32 _AwayTeam_Id;
        partial void OnAwayTeam_IdChanging(global::System.Int32 value);
        partial void OnAwayTeam_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HomeTeamScore
        {
            get
            {
                return _HomeTeamScore;
            }
            set
            {
                OnHomeTeamScoreChanging(value);
                ReportPropertyChanging("HomeTeamScore");
                _HomeTeamScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeamScore");
                OnHomeTeamScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _HomeTeamScore;
        partial void OnHomeTeamScoreChanging(Nullable<global::System.Int32> value);
        partial void OnHomeTeamScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AwayTeamScore
        {
            get
            {
                return _AwayTeamScore;
            }
            set
            {
                OnAwayTeamScoreChanging(value);
                ReportPropertyChanging("AwayTeamScore");
                _AwayTeamScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeamScore");
                OnAwayTeamScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _AwayTeamScore;
        partial void OnAwayTeamScoreChanging(Nullable<global::System.Int32> value);
        partial void OnAwayTeamScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_Game_Season", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_Game_Season", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_Game_Season", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_Game_Season", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("ppfModel.FK_Game_Season", "Season", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_Pick_Game", "Pick")]
        public EntityCollection<Pick> Picks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pick>("ppfModel.FK_Pick_Game", "Pick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pick>("ppfModel.FK_Pick_Game", "Pick", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_StandardPick_Game", "StandardPick")]
        public EntityCollection<StandardPick> StandardPicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StandardPick>("ppfModel.FK_StandardPick_Game", "StandardPick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StandardPick>("ppfModel.FK_StandardPick_Game", "StandardPick", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ppfModel", Name="Pick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pick : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="game_Id">Initial value of the Game_Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="pointTotal">Initial value of the PointTotal property.</param>
        public static Pick CreatePick(global::System.Int32 id, global::System.Int32 game_Id, global::System.String userId, global::System.Int32 pointTotal)
        {
            Pick pick = new Pick();
            pick.Id = id;
            pick.Game_Id = game_Id;
            pick.UserId = userId;
            pick.PointTotal = pointTotal;
            return pick;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Game_Id
        {
            get
            {
                return _Game_Id;
            }
            set
            {
                OnGame_IdChanging(value);
                ReportPropertyChanging("Game_Id");
                _Game_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Game_Id");
                OnGame_IdChanged();
            }
        }
        private global::System.Int32 _Game_Id;
        partial void OnGame_IdChanging(global::System.Int32 value);
        partial void OnGame_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointTotal
        {
            get
            {
                return _PointTotal;
            }
            set
            {
                OnPointTotalChanging(value);
                ReportPropertyChanging("PointTotal");
                _PointTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointTotal");
                OnPointTotalChanged();
            }
        }
        private global::System.Int32 _PointTotal;
        partial void OnPointTotalChanging(global::System.Int32 value);
        partial void OnPointTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsWinner
        {
            get
            {
                return _IsWinner;
            }
            set
            {
                OnIsWinnerChanging(value);
                ReportPropertyChanging("IsWinner");
                _IsWinner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsWinner");
                OnIsWinnerChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsWinner;
        partial void OnIsWinnerChanging(Nullable<global::System.Boolean> value);
        partial void OnIsWinnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Team_Id
        {
            get
            {
                return _Team_Id;
            }
            set
            {
                OnTeam_IdChanging(value);
                ReportPropertyChanging("Team_Id");
                _Team_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team_Id");
                OnTeam_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Team_Id;
        partial void OnTeam_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTeam_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_Pick_Game", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("ppfModel.FK_Pick_Game", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("ppfModel.FK_Pick_Game", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("ppfModel.FK_Pick_Game", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("ppfModel.FK_Pick_Game", "Game", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ppfModel", Name="PlayoffSuperbowlPick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayoffSuperbowlPick : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayoffSuperbowlPick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="pointTotal">Initial value of the PointTotal property.</param>
        /// <param name="week">Initial value of the Week property.</param>
        /// <param name="season_Id">Initial value of the Season_Id property.</param>
        /// <param name="isSuperbowl">Initial value of the IsSuperbowl property.</param>
        /// <param name="isPlayoff">Initial value of the IsPlayoff property.</param>
        /// <param name="isWinner">Initial value of the IsWinner property.</param>
        /// <param name="team_Id">Initial value of the Team_Id property.</param>
        public static PlayoffSuperbowlPick CreatePlayoffSuperbowlPick(global::System.Int32 id, global::System.String userId, global::System.Int32 pointTotal, global::System.Int32 week, global::System.Int32 season_Id, global::System.Boolean isSuperbowl, global::System.Boolean isPlayoff, global::System.Boolean isWinner, global::System.Int32 team_Id)
        {
            PlayoffSuperbowlPick playoffSuperbowlPick = new PlayoffSuperbowlPick();
            playoffSuperbowlPick.Id = id;
            playoffSuperbowlPick.UserId = userId;
            playoffSuperbowlPick.PointTotal = pointTotal;
            playoffSuperbowlPick.Week = week;
            playoffSuperbowlPick.Season_Id = season_Id;
            playoffSuperbowlPick.IsSuperbowl = isSuperbowl;
            playoffSuperbowlPick.IsPlayoff = isPlayoff;
            playoffSuperbowlPick.IsWinner = isWinner;
            playoffSuperbowlPick.Team_Id = team_Id;
            return playoffSuperbowlPick;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointTotal
        {
            get
            {
                return _PointTotal;
            }
            set
            {
                OnPointTotalChanging(value);
                ReportPropertyChanging("PointTotal");
                _PointTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointTotal");
                OnPointTotalChanged();
            }
        }
        private global::System.Int32 _PointTotal;
        partial void OnPointTotalChanging(global::System.Int32 value);
        partial void OnPointTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Week
        {
            get
            {
                return _Week;
            }
            set
            {
                OnWeekChanging(value);
                ReportPropertyChanging("Week");
                _Week = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Week");
                OnWeekChanged();
            }
        }
        private global::System.Int32 _Week;
        partial void OnWeekChanging(global::System.Int32 value);
        partial void OnWeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Season_Id
        {
            get
            {
                return _Season_Id;
            }
            set
            {
                OnSeason_IdChanging(value);
                ReportPropertyChanging("Season_Id");
                _Season_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Season_Id");
                OnSeason_IdChanged();
            }
        }
        private global::System.Int32 _Season_Id;
        partial void OnSeason_IdChanging(global::System.Int32 value);
        partial void OnSeason_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSuperbowl
        {
            get
            {
                return _IsSuperbowl;
            }
            set
            {
                OnIsSuperbowlChanging(value);
                ReportPropertyChanging("IsSuperbowl");
                _IsSuperbowl = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSuperbowl");
                OnIsSuperbowlChanged();
            }
        }
        private global::System.Boolean _IsSuperbowl;
        partial void OnIsSuperbowlChanging(global::System.Boolean value);
        partial void OnIsSuperbowlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPlayoff
        {
            get
            {
                return _IsPlayoff;
            }
            set
            {
                OnIsPlayoffChanging(value);
                ReportPropertyChanging("IsPlayoff");
                _IsPlayoff = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPlayoff");
                OnIsPlayoffChanged();
            }
        }
        private global::System.Boolean _IsPlayoff;
        partial void OnIsPlayoffChanging(global::System.Boolean value);
        partial void OnIsPlayoffChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWinner
        {
            get
            {
                return _IsWinner;
            }
            set
            {
                OnIsWinnerChanging(value);
                ReportPropertyChanging("IsWinner");
                _IsWinner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsWinner");
                OnIsWinnerChanged();
            }
        }
        private global::System.Boolean _IsWinner;
        partial void OnIsWinnerChanging(global::System.Boolean value);
        partial void OnIsWinnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team_Id
        {
            get
            {
                return _Team_Id;
            }
            set
            {
                OnTeam_IdChanging(value);
                ReportPropertyChanging("Team_Id");
                _Team_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team_Id");
                OnTeam_IdChanged();
            }
        }
        private global::System.Int32 _Team_Id;
        partial void OnTeam_IdChanging(global::System.Int32 value);
        partial void OnTeam_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_PlayoffSuperbowlPick_Season", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_PlayoffSuperbowlPick_Season", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_PlayoffSuperbowlPick_Season", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_PlayoffSuperbowlPick_Season", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("ppfModel.FK_PlayoffSuperbowlPick_Season", "Season", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_PlayoffSuperbowlPick_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ppfModel.FK_PlayoffSuperbowlPick_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ppfModel.FK_PlayoffSuperbowlPick_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ppfModel.FK_PlayoffSuperbowlPick_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("ppfModel.FK_PlayoffSuperbowlPick_Team", "Team", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ppfModel", Name="Season")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Season : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Season object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="isCurrent">Initial value of the IsCurrent property.</param>
        /// <param name="numberOfWeeks">Initial value of the NumberOfWeeks property.</param>
        public static Season CreateSeason(global::System.Int32 id, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean isCurrent, global::System.Int32 numberOfWeeks)
        {
            Season season = new Season();
            season.Id = id;
            season.StartDate = startDate;
            season.EndDate = endDate;
            season.IsCurrent = isCurrent;
            season.NumberOfWeeks = numberOfWeeks;
            return season;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrent
        {
            get
            {
                return _IsCurrent;
            }
            set
            {
                OnIsCurrentChanging(value);
                ReportPropertyChanging("IsCurrent");
                _IsCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrent");
                OnIsCurrentChanged();
            }
        }
        private global::System.Boolean _IsCurrent;
        partial void OnIsCurrentChanging(global::System.Boolean value);
        partial void OnIsCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfWeeks
        {
            get
            {
                return _NumberOfWeeks;
            }
            set
            {
                OnNumberOfWeeksChanging(value);
                ReportPropertyChanging("NumberOfWeeks");
                _NumberOfWeeks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfWeeks");
                OnNumberOfWeeksChanged();
            }
        }
        private global::System.Int32 _NumberOfWeeks;
        partial void OnNumberOfWeeksChanging(global::System.Int32 value);
        partial void OnNumberOfWeeksChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_Game_Season", "Game")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("ppfModel.FK_Game_Season", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("ppfModel.FK_Game_Season", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_PlayoffSuperbowlPick_Season", "PlayoffSuperbowlPick")]
        public EntityCollection<PlayoffSuperbowlPick> PlayoffSuperbowlPicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayoffSuperbowlPick>("ppfModel.FK_PlayoffSuperbowlPick_Season", "PlayoffSuperbowlPick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayoffSuperbowlPick>("ppfModel.FK_PlayoffSuperbowlPick_Season", "PlayoffSuperbowlPick", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_StandardPlayoffSuperbowlPick_Season", "StandardPlayoffSuperbowlPick")]
        public EntityCollection<StandardPlayoffSuperbowlPick> StandardPlayoffSuperbowlPicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StandardPlayoffSuperbowlPick>("ppfModel.FK_StandardPlayoffSuperbowlPick_Season", "StandardPlayoffSuperbowlPick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StandardPlayoffSuperbowlPick>("ppfModel.FK_StandardPlayoffSuperbowlPick_Season", "StandardPlayoffSuperbowlPick", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ppfModel", Name="StandardPick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StandardPick : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StandardPick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pointTotal">Initial value of the PointTotal property.</param>
        /// <param name="team_Id">Initial value of the Team_Id property.</param>
        /// <param name="game_Id">Initial value of the Game_Id property.</param>
        public static StandardPick CreateStandardPick(global::System.Int32 id, global::System.Int32 pointTotal, global::System.Int32 team_Id, global::System.Int32 game_Id)
        {
            StandardPick standardPick = new StandardPick();
            standardPick.Id = id;
            standardPick.PointTotal = pointTotal;
            standardPick.Team_Id = team_Id;
            standardPick.Game_Id = game_Id;
            return standardPick;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointTotal
        {
            get
            {
                return _PointTotal;
            }
            set
            {
                OnPointTotalChanging(value);
                ReportPropertyChanging("PointTotal");
                _PointTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointTotal");
                OnPointTotalChanged();
            }
        }
        private global::System.Int32 _PointTotal;
        partial void OnPointTotalChanging(global::System.Int32 value);
        partial void OnPointTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team_Id
        {
            get
            {
                return _Team_Id;
            }
            set
            {
                OnTeam_IdChanging(value);
                ReportPropertyChanging("Team_Id");
                _Team_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team_Id");
                OnTeam_IdChanged();
            }
        }
        private global::System.Int32 _Team_Id;
        partial void OnTeam_IdChanging(global::System.Int32 value);
        partial void OnTeam_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsWinner
        {
            get
            {
                return _IsWinner;
            }
            set
            {
                OnIsWinnerChanging(value);
                ReportPropertyChanging("IsWinner");
                _IsWinner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsWinner");
                OnIsWinnerChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsWinner;
        partial void OnIsWinnerChanging(Nullable<global::System.Boolean> value);
        partial void OnIsWinnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Game_Id
        {
            get
            {
                return _Game_Id;
            }
            set
            {
                OnGame_IdChanging(value);
                ReportPropertyChanging("Game_Id");
                _Game_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Game_Id");
                OnGame_IdChanged();
            }
        }
        private global::System.Int32 _Game_Id;
        partial void OnGame_IdChanging(global::System.Int32 value);
        partial void OnGame_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_StandardPick_Game", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("ppfModel.FK_StandardPick_Game", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("ppfModel.FK_StandardPick_Game", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("ppfModel.FK_StandardPick_Game", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("ppfModel.FK_StandardPick_Game", "Game", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ppfModel", Name="StandardPlayoffSuperbowlPick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StandardPlayoffSuperbowlPick : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StandardPlayoffSuperbowlPick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="season_Id">Initial value of the Season_Id property.</param>
        /// <param name="week">Initial value of the Week property.</param>
        /// <param name="isPlayoff">Initial value of the IsPlayoff property.</param>
        /// <param name="isSuperbowl">Initial value of the IsSuperbowl property.</param>
        /// <param name="pointTotal">Initial value of the PointTotal property.</param>
        /// <param name="team_Id">Initial value of the Team_Id property.</param>
        public static StandardPlayoffSuperbowlPick CreateStandardPlayoffSuperbowlPick(global::System.Int32 id, global::System.Int32 season_Id, global::System.Int32 week, global::System.Boolean isPlayoff, global::System.Boolean isSuperbowl, global::System.Int32 pointTotal, global::System.Int32 team_Id)
        {
            StandardPlayoffSuperbowlPick standardPlayoffSuperbowlPick = new StandardPlayoffSuperbowlPick();
            standardPlayoffSuperbowlPick.Id = id;
            standardPlayoffSuperbowlPick.Season_Id = season_Id;
            standardPlayoffSuperbowlPick.Week = week;
            standardPlayoffSuperbowlPick.IsPlayoff = isPlayoff;
            standardPlayoffSuperbowlPick.IsSuperbowl = isSuperbowl;
            standardPlayoffSuperbowlPick.PointTotal = pointTotal;
            standardPlayoffSuperbowlPick.Team_Id = team_Id;
            return standardPlayoffSuperbowlPick;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Season_Id
        {
            get
            {
                return _Season_Id;
            }
            set
            {
                OnSeason_IdChanging(value);
                ReportPropertyChanging("Season_Id");
                _Season_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Season_Id");
                OnSeason_IdChanged();
            }
        }
        private global::System.Int32 _Season_Id;
        partial void OnSeason_IdChanging(global::System.Int32 value);
        partial void OnSeason_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Week
        {
            get
            {
                return _Week;
            }
            set
            {
                OnWeekChanging(value);
                ReportPropertyChanging("Week");
                _Week = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Week");
                OnWeekChanged();
            }
        }
        private global::System.Int32 _Week;
        partial void OnWeekChanging(global::System.Int32 value);
        partial void OnWeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPlayoff
        {
            get
            {
                return _IsPlayoff;
            }
            set
            {
                OnIsPlayoffChanging(value);
                ReportPropertyChanging("IsPlayoff");
                _IsPlayoff = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPlayoff");
                OnIsPlayoffChanged();
            }
        }
        private global::System.Boolean _IsPlayoff;
        partial void OnIsPlayoffChanging(global::System.Boolean value);
        partial void OnIsPlayoffChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSuperbowl
        {
            get
            {
                return _IsSuperbowl;
            }
            set
            {
                OnIsSuperbowlChanging(value);
                ReportPropertyChanging("IsSuperbowl");
                _IsSuperbowl = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSuperbowl");
                OnIsSuperbowlChanged();
            }
        }
        private global::System.Boolean _IsSuperbowl;
        partial void OnIsSuperbowlChanging(global::System.Boolean value);
        partial void OnIsSuperbowlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointTotal
        {
            get
            {
                return _PointTotal;
            }
            set
            {
                OnPointTotalChanging(value);
                ReportPropertyChanging("PointTotal");
                _PointTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointTotal");
                OnPointTotalChanged();
            }
        }
        private global::System.Int32 _PointTotal;
        partial void OnPointTotalChanging(global::System.Int32 value);
        partial void OnPointTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team_Id
        {
            get
            {
                return _Team_Id;
            }
            set
            {
                OnTeam_IdChanging(value);
                ReportPropertyChanging("Team_Id");
                _Team_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team_Id");
                OnTeam_IdChanged();
            }
        }
        private global::System.Int32 _Team_Id;
        partial void OnTeam_IdChanging(global::System.Int32 value);
        partial void OnTeam_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_StandardPlayoffSuperbowlPick_Season", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_StandardPlayoffSuperbowlPick_Season", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_StandardPlayoffSuperbowlPick_Season", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ppfModel.FK_StandardPlayoffSuperbowlPick_Season", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("ppfModel.FK_StandardPlayoffSuperbowlPick_Season", "Season", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ppfModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamName">Initial value of the TeamName property.</param>
        /// <param name="conference">Initial value of the Conference property.</param>
        /// <param name="division">Initial value of the Division property.</param>
        public static Team CreateTeam(global::System.Int32 id, global::System.String teamName, global::System.String conference, global::System.String division)
        {
            Team team = new Team();
            team.Id = id;
            team.TeamName = teamName;
            team.Conference = conference;
            team.Division = division;
            return team;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Conference
        {
            get
            {
                return _Conference;
            }
            set
            {
                OnConferenceChanging(value);
                ReportPropertyChanging("Conference");
                _Conference = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Conference");
                OnConferenceChanged();
            }
        }
        private global::System.String _Conference;
        partial void OnConferenceChanging(global::System.String value);
        partial void OnConferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Division
        {
            get
            {
                return _Division;
            }
            set
            {
                OnDivisionChanging(value);
                ReportPropertyChanging("Division");
                _Division = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Division");
                OnDivisionChanged();
            }
        }
        private global::System.String _Division;
        partial void OnDivisionChanging(global::System.String value);
        partial void OnDivisionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ppfModel", "FK_PlayoffSuperbowlPick_Team", "PlayoffSuperbowlPick")]
        public EntityCollection<PlayoffSuperbowlPick> PlayoffSuperbowlPicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayoffSuperbowlPick>("ppfModel.FK_PlayoffSuperbowlPick_Team", "PlayoffSuperbowlPick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayoffSuperbowlPick>("ppfModel.FK_PlayoffSuperbowlPick_Team", "PlayoffSuperbowlPick", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
